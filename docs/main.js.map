{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["document.addEventListener(\"DOMContentLoaded\", () => {\r\n    let currentPlayer: \"X\" | \"O\" = \"X\";\r\n    let gameActive: boolean = true;\r\n    const tiles: NodeListOf<HTMLDivElement> = document.querySelectorAll(\".tile\");\r\n    const winPatterns: number[][] = [\r\n        [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\r\n        [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\r\n        [0, 4, 8], [2, 4, 6] // Diagonals\r\n    ];\r\n\r\n    tiles.forEach((tile: HTMLDivElement, index: number) => {\r\n        tile.addEventListener(\"mouseover\", function () {\r\n            if (!this.textContent && gameActive) {\r\n                this.style.opacity = \"0.5\";\r\n                this.textContent = currentPlayer;\r\n            }\r\n        });\r\n\r\n        tile.addEventListener(\"mouseout\", function () {\r\n            if (this.style.opacity === \"0.5\") {\r\n                this.textContent = \"\";\r\n                this.style.opacity = \"1\";\r\n            }\r\n        });\r\n\r\n        tile.addEventListener(\"click\", function () {\r\n            if (!this.textContent || this.style.opacity === \"0.5\") {\r\n                if (!gameActive) return; // Stop input if game is over\r\n\r\n                this.style.opacity = \"1\";\r\n                this.textContent = currentPlayer;\r\n                this.classList.add(currentPlayer);\r\n\r\n                if (checkWin(currentPlayer)) {\r\n                    gameActive = false;\r\n                    setTimeout(() => alert(`${currentPlayer} wins!`), 100);\r\n                    return;\r\n                }\r\n\r\n                if (checkDraw()) {\r\n                    gameActive = false;\r\n                    setTimeout(() => alert(\"It's a draw!\"), 100);\r\n                    return;\r\n                }\r\n\r\n                switchPlayer();\r\n            }\r\n        });\r\n    });\r\n\r\n    function switchPlayer(): void {\r\n        currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\";\r\n    }\r\n\r\n    function checkWin(player: \"X\" | \"O\"): boolean {\r\n        return winPatterns.some(pattern =>\r\n            pattern.every(index => tiles[index].textContent === player)\r\n        );\r\n    }\r\n\r\n    function checkDraw(): boolean {\r\n        return [...tiles].every(tile => tile.textContent !== \"\");\r\n    }\r\n\r\n});\r\n"],
  "mappings": "AAAA,SAAS,iBAAiB,oBAAoB,MAAM;AAChD,MAAI,gBAA2B;AAC/B,MAAI,aAAsB;AAC1B,QAAM,QAAoC,SAAS,iBAAiB,OAAO;AAC3E,QAAM,cAA0B;AAAA,IAC5B,CAAC,GAAG,GAAG,CAAC;AAAA,IAAG,CAAC,GAAG,GAAG,CAAC;AAAA,IAAG,CAAC,GAAG,GAAG,CAAC;AAAA;AAAA,IAC9B,CAAC,GAAG,GAAG,CAAC;AAAA,IAAG,CAAC,GAAG,GAAG,CAAC;AAAA,IAAG,CAAC,GAAG,GAAG,CAAC;AAAA;AAAA,IAC9B,CAAC,GAAG,GAAG,CAAC;AAAA,IAAG,CAAC,GAAG,GAAG,CAAC;AAAA;AAAA,EACvB;AAEA,QAAM,QAAQ,CAAC,MAAsB,UAAkB;AACnD,SAAK,iBAAiB,aAAa,WAAY;AAC3C,UAAI,CAAC,KAAK,eAAe,YAAY;AACjC,aAAK,MAAM,UAAU;AACrB,aAAK,cAAc;AAAA,MACvB;AAAA,IACJ,CAAC;AAED,SAAK,iBAAiB,YAAY,WAAY;AAC1C,UAAI,KAAK,MAAM,YAAY,OAAO;AAC9B,aAAK,cAAc;AACnB,aAAK,MAAM,UAAU;AAAA,MACzB;AAAA,IACJ,CAAC;AAED,SAAK,iBAAiB,SAAS,WAAY;AACvC,UAAI,CAAC,KAAK,eAAe,KAAK,MAAM,YAAY,OAAO;AACnD,YAAI,CAAC,WAAY;AAEjB,aAAK,MAAM,UAAU;AACrB,aAAK,cAAc;AACnB,aAAK,UAAU,IAAI,aAAa;AAEhC,YAAI,SAAS,aAAa,GAAG;AACzB,uBAAa;AACb,qBAAW,MAAM,MAAM,GAAG,aAAa,QAAQ,GAAG,GAAG;AACrD;AAAA,QACJ;AAEA,YAAI,UAAU,GAAG;AACb,uBAAa;AACb,qBAAW,MAAM,MAAM,cAAc,GAAG,GAAG;AAC3C;AAAA,QACJ;AAEA,qBAAa;AAAA,MACjB;AAAA,IACJ,CAAC;AAAA,EACL,CAAC;AAED,WAAS,eAAqB;AAC1B,oBAAgB,kBAAkB,MAAM,MAAM;AAAA,EAClD;AAEA,WAAS,SAAS,QAA4B;AAC1C,WAAO,YAAY;AAAA,MAAK,aACpB,QAAQ,MAAM,WAAS,MAAM,KAAK,EAAE,gBAAgB,MAAM;AAAA,IAC9D;AAAA,EACJ;AAEA,WAAS,YAAqB;AAC1B,WAAO,CAAC,GAAG,KAAK,EAAE,MAAM,UAAQ,KAAK,gBAAgB,EAAE;AAAA,EAC3D;AAEJ,CAAC;",
  "names": []
}
