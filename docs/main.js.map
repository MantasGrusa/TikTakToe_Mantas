{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["document.addEventListener(\"DOMContentLoaded\", () => {\r\n    let currentPlayer: \"X\" | \"O\" = \"X\";\r\n    let gameActive: boolean = true;\r\n    const tiles: NodeListOf<HTMLButtonElement> = document.querySelectorAll(\".sizing\");\r\n    const playerDisplay: HTMLElement | null = document.querySelector(\"h3\");\r\n    const resetButton: HTMLButtonElement = document.createElement(\"button\");\r\n\r\n\r\n    resetButton.textContent = \"Reset Game\";\r\n    resetButton.style.marginTop = \"20px\";\r\n    resetButton.style.padding = \"10px\";\r\n    resetButton.style.fontSize = \"16px\";\r\n    document.body.appendChild(resetButton);\r\n\r\n    const winPatterns: number[][] = [\r\n        [0, 1, 2], [3, 4, 5], [6, 7, 8],\r\n        [0, 3, 6], [1, 4, 7], [2, 5, 8],\r\n        [0, 4, 8], [2, 4, 6]\r\n    ];\r\n\r\n\r\n    loadGame();\r\n\r\n\r\n    tiles.forEach((tile, index) => {\r\n        tile.addEventListener(\"mouseover\", function () {\r\n            if (!this.textContent && gameActive) {\r\n                this.style.opacity = \"0.5\";\r\n                this.textContent = currentPlayer;\r\n            }\r\n        });\r\n\r\n        tile.addEventListener(\"mouseout\", function () {\r\n            if (this.style.opacity === \"0.5\") {\r\n                this.textContent = \"\";\r\n                this.style.opacity = \"1\";\r\n            }\r\n        });\r\n\r\n        tile.addEventListener(\"click\", function () {\r\n            if (!this.textContent || this.style.opacity === \"0.5\") {\r\n                if (!gameActive) return;\r\n\r\n                this.style.opacity = \"1\";\r\n                this.textContent = currentPlayer;\r\n                this.classList.add(currentPlayer);\r\n\r\n\r\n                saveGame();\r\n\r\n                if (checkWin(currentPlayer)) {\r\n                    gameActive = false;\r\n                    setTimeout(() => showModal(`${currentPlayer} Wins! \uD83C\uDF89`), 200);\r\n                    return;\r\n                }\r\n\r\n                if (checkDraw()) {\r\n                    gameActive = false;\r\n                    setTimeout(() => showModal(\"It's a Draw! \uD83E\uDD1D\"), 200);\r\n                    return;\r\n                }\r\n\r\n                switchPlayer();\r\n            }\r\n        });\r\n    });\r\n\r\n    function switchPlayer(): void {\r\n        currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\";\r\n        if (playerDisplay) playerDisplay.textContent = `Current player: ${currentPlayer}`;\r\n        saveGame();\r\n    }\r\n\r\n    function checkWin(player: \"X\" | \"O\"): boolean {\r\n        return winPatterns.some(pattern =>\r\n            pattern.every(index => tiles[index].textContent === player)\r\n        );\r\n    }\r\n\r\n    function checkDraw(): boolean {\r\n        return [...tiles].every(tile => tile.textContent !== \"\");\r\n    }\r\n\r\n    function showModal(message: string) {\r\n        const modal = document.getElementById(\"gameModal\")!;\r\n        const modalMessage = document.getElementById(\"modalMessage\")!;\r\n        const closeModal = document.getElementById(\"closeModal\")!;\r\n\r\n        modalMessage.textContent = message;\r\n        modal.style.display = \"flex\";\r\n\r\n        closeModal.onclick = () => {\r\n            modal.style.display = \"none\";\r\n            resetGame();\r\n        };\r\n    }\r\n\r\n\r\n    function resetGame() {\r\n        gameActive = true;\r\n        currentPlayer = \"X\";\r\n        if (playerDisplay) playerDisplay.textContent = \"Current player: X\";\r\n\r\n        tiles.forEach(tile => {\r\n            tile.textContent = \"\";\r\n            tile.style.opacity = \"1\";\r\n            tile.classList.remove(\"X\", \"O\");\r\n        });\r\n\r\n\r\n        localStorage.removeItem('ticTacToeGame');\r\n    }\r\n\r\n\r\n    resetButton.addEventListener(\"click\", resetGame);\r\n\r\n\r\n    function saveGame(): void {\r\n        const gameState = {\r\n            board: Array.from(tiles).map(tile => tile.textContent),\r\n            currentPlayer,\r\n            gameActive\r\n        };\r\n        localStorage.setItem('ticTacToeGame', JSON.stringify(gameState));\r\n    }\r\n\r\n\r\n    function loadGame(): void {\r\n        const savedGame = localStorage.getItem('ticTacToeGame');\r\n        if (savedGame) {\r\n            const gameState = JSON.parse(savedGame);\r\n            const { board, currentPlayer: savedPlayer, gameActive: isActive } = gameState;\r\n\r\n            board.forEach((mark: string, index: number) => {\r\n                if (mark) {\r\n                    tiles[index].textContent = mark;\r\n                }\r\n            });\r\n            gameActive = isActive !== undefined ? isActive : true;\r\n\r\n\r\n            if (gameActive) {\r\n                currentPlayer = savedPlayer || \"X\";\r\n            }\r\n\r\n            if (playerDisplay) playerDisplay.textContent = `Current player: ${currentPlayer}`;\r\n        }\r\n    }\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
